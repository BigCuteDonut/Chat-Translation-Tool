<Window x:Class="ChatTranslator.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ChatTranslator"
        mc:Ignorable="d"
        Title="MainWindow" MinWidth="260" MinHeight="260" Height="346" Width="326" BorderThickness="0" Topmost="True" Background="#FF13293F" BorderBrush="#FF13293F" WindowStyle="None" ResizeMode="CanResize" Loaded="Window_Loaded" AllowsTransparency="True" SnapsToDevicePixels="True">
    <Window.Resources>
        <ControlTemplate x:Key="ScrollBarControlTemplate1" TargetType="{x:Type ScrollBar}">
            <Grid x:Name="Bg" SnapsToDevicePixels="True">
                <Grid.RowDefinitions>
                    <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                    <RowDefinition Height="1E-05*"/>
                    <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                </Grid.RowDefinitions>
                <Border Opacity="0.1" BorderBrush="Black" BorderThickness="{TemplateBinding BorderThickness}" Background="Black" Grid.Row="1"/>
                <RepeatButton x:Name="PART_LineUpButton" Command="ScrollBar.LineUpCommand" IsEnabled="{TemplateBinding IsMouseOver}" Background="Black" BorderBrush="Black" Foreground="Black">
                    <RepeatButton.Style>
                        <Style TargetType="{x:Type RepeatButton}">
                            <Setter Property="FocusVisualStyle">
                                <Setter.Value>
                                    <Style>
                                        <Setter Property="Control.Template">
                                            <Setter.Value>
                                                <ControlTemplate>
                                                    <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="BorderThickness" Value="0"/>
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                            <Setter Property="Padding" Value="1"/>
                            <Setter Property="Focusable" Value="False"/>
                            <Setter Property="IsTabStop" Value="False"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                        <Border x:Name="border" BorderBrush="#FF1B3856" BorderThickness="0
                                                " Background="#FF1B3856" SnapsToDevicePixels="True">
                                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsPressed" Value="True">
                                                <Setter Property="Background" TargetName="border" Value="#FF10243A"/>
                                                <Setter Property="BorderBrush" TargetName="border" Value="#FF10243A"/>
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                                <Setter Property="Background" TargetName="border" Value="#FF10243A"/>
                                                <Setter Property="BorderBrush" TargetName="border" Value="#FF10243A"/>
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="False">
                                                <Setter Property="Background" TargetName="border" Value="#FF10243A"/>
                                                <Setter Property="BorderBrush" TargetName="border" Value="#FF10243A"/>
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="True">
                                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                                <Setter Property="Background" TargetName="border" Value="#FF10243A"/>
                                                <Setter Property="BorderBrush" TargetName="border" Value="#FF10243A"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </RepeatButton.Style>
                    <Path x:Name="ArrowTop" Data="M0,4C0,4 0,6 0,6 0,6 3.5,2.5 3.5,2.5 3.5,2.5 7,6 7,6 7,6 7,4 7,4 7,4 3.5,0.5 3.5,0.5 3.5,0.5 0,4 0,4z" Fill="#FF606060" Margin="3,4,3,3" Stretch="Uniform"/>
                </RepeatButton>
                <Track x:Name="PART_Track" IsDirectionReversed="True" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Command="ScrollBar.PageUpCommand">
                            <RepeatButton.Style>
                                <Style TargetType="{x:Type RepeatButton}">
                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Setter Property="Focusable" Value="False"/>
                                    <Setter Property="IsTabStop" Value="False"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                <Rectangle Opacity="0" Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </RepeatButton.Style>
                        </RepeatButton>
                    </Track.DecreaseRepeatButton>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Command="ScrollBar.PageDownCommand">
                            <RepeatButton.Style>
                                <Style TargetType="{x:Type RepeatButton}">
                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Setter Property="Focusable" Value="False"/>
                                    <Setter Property="IsTabStop" Value="False"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                <Rectangle Opacity="0" Fill="#FF0C1d43" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </RepeatButton.Style>
                        </RepeatButton>
                    </Track.IncreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb>
                            <Thumb.Style>
                                <Style TargetType="{x:Type Thumb}">
                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                    <Setter Property="IsTabStop" Value="False"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                <Rectangle x:Name="rectangle" Fill="#FF10243A" Height="{TemplateBinding Height}" SnapsToDevicePixels="True" Width="{TemplateBinding Width}"/>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsDragging" Value="True">
                                                        <Setter Property="Background" Value="#FF10243A"/>
                                                        <Setter Property="BorderBrush"  Value="#FF10243A"/>
                                                    </Trigger>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Background" Value="#FF10243A"/>
                                                        <Setter Property="BorderBrush" Value="#FF10243A"/>
                                                    </Trigger>
                                                    <Trigger Property="IsDragging" Value="False">
                                                        <Setter Property="Background" Value="#FF10243A"/>
                                                        <Setter Property="BorderBrush"  Value="#FF10243A"/>
                                                    </Trigger>
                                                    <Trigger Property="IsEnabled" Value="True">
                                                        <Setter Property="Background" Value="#FF10243A"/>
                                                        <Setter Property="BorderBrush" Value="#FF10243A"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Thumb.Style>
                        </Thumb>
                    </Track.Thumb>
                </Track>
                <RepeatButton x:Name="PART_LineDownButton" Command="ScrollBar.LineDownCommand" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="2">
                    <RepeatButton.Style>
                        <Style TargetType="{x:Type RepeatButton}">
                            <Setter Property="FocusVisualStyle">
                                <Setter.Value>
                                    <Style>
                                        <Setter Property="Control.Template">
                                            <Setter.Value>
                                                <ControlTemplate>
                                                    <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="BorderThickness" Value="1"/>
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                            <Setter Property="Padding" Value="1"/>
                            <Setter Property="Focusable" Value="False"/>
                            <Setter Property="IsTabStop" Value="False"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                        <Border x:Name="border" BorderBrush="#FFF0F0F0" BorderThickness="1" Background="#FFF0F0F0" SnapsToDevicePixels="True">
                                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Border>
                                        <ControlTemplate.Triggers>

                                            <Trigger Property="IsPressed" Value="True">
                                                <Setter Property="Background" TargetName="border" Value="#FF10243A"/>
                                                <Setter Property="BorderBrush" TargetName="border" Value="#FF10243A"/>
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                                <Setter Property="Background" TargetName="border" Value="#FF10243A"/>
                                                <Setter Property="BorderBrush" TargetName="border" Value="#FF10243A"/>
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="False">
                                                <Setter Property="Background" TargetName="border" Value="#FF10243A"/>
                                                <Setter Property="BorderBrush" TargetName="border" Value="#FF10243A"/>
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="True">
                                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                                <Setter Property="Background" TargetName="border" Value="#FF10243A"/>
                                                <Setter Property="BorderBrush" TargetName="border" Value="#FF10243A"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </RepeatButton.Style>
                    <Path x:Name="ArrowBottom" Data="M0,2.5C0,2.5 0,0.5 0,0.5 0,0.5 3.5,4 3.5,4 3.5,4 7,0.5 7,0.5 7,0.5 7,2.5 7,2.5 7,2.5 3.5,6 3.5,6 3.5,6 0,2.5 0,2.5z" Fill="#FF606060" Margin="3,4,3,3" Stretch="Uniform"/>
                </RepeatButton>
            </Grid>
            <ControlTemplate.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true"/>
                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="true"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Fill" TargetName="ArrowBottom" Value="White"/>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true"/>
                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="true"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Fill" TargetName="ArrowTop" Value="White"/>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true"/>
                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="false"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Fill" TargetName="ArrowBottom" Value="Black"/>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true"/>
                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="false"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Fill" TargetName="ArrowTop" Value="Black"/>
                </MultiDataTrigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Fill" TargetName="ArrowTop" Value="#FFBFBFBF"/>
                    <Setter Property="Fill" TargetName="ArrowBottom" Value="#FFBFBFBF"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </Window.Resources>
    <WindowChrome.WindowChrome>
        <WindowChrome 
        CaptionHeight="0"
        ResizeBorderThickness="6" />
    </WindowChrome.WindowChrome>
    <Grid Canvas.Left="0" Canvas.Top="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
        <Canvas Name="SettingsButtonBackground" HorizontalAlignment="Left" MinHeight="32" Margin="4,4,0,0" VerticalAlignment="Top" MinWidth="32" Background="#FF244464"/>
        <Canvas Name="SettingsButton" HorizontalAlignment="Left" MinHeight="32" Margin="4,4,0,0" VerticalAlignment="Top" MinWidth="32"/>
        <Canvas Name="MoveButton" MinHeight="32" Margin="36,4,124,0" VerticalAlignment="Top" ScrollViewer.VerticalScrollBarVisibility="Disabled" Cursor="SizeAll" Background="#00000000"/>
        <Canvas x:Name="ClickThroughButtonBackground" HorizontalAlignment="Right" MinHeight="32" VerticalAlignment="Top" Margin="0,4,100,0" MinWidth="32" Background="#FF244464" Opacity="0"/>
        <Canvas x:Name="ClickThroughButton" HorizontalAlignment="Right" MinHeight="32" VerticalAlignment="Top" Margin="0,4,100,0" MinWidth="32"/>
        <Canvas x:Name="AutoScrollButtonBackground" HorizontalAlignment="Right" MinHeight="32" Margin="0,4,68,0" VerticalAlignment="Top" MinWidth="32" Background="#FF244464"/>
        <Canvas x:Name="AutoScrollButton" HorizontalAlignment="Right" MinHeight="32" VerticalAlignment="Top" MinWidth="32" Margin="0,4,68,0"/>
        <Canvas x:Name="AutoShowButtonBackground" HorizontalAlignment="Right" Margin="0,4,36,0" MinHeight="32" VerticalAlignment="Top" MinWidth="32" Background="#FF244464"/>
        <Canvas x:Name="AutoShowButton" HorizontalAlignment="Right" MinHeight="32" Margin="0,4,36,0" VerticalAlignment="Top" MinWidth="32"/>
        <Canvas x:Name="CloseButtonBackground" HorizontalAlignment="Right" MinHeight="32" VerticalAlignment="Top" MinWidth="32" Background="#FF244464" Margin="0,4,4,0"/>
        <Canvas x:Name="CloseButton" MinHeight="32" VerticalAlignment="Top" MinWidth="32" Margin="0,4,4,0" HorizontalAlignment="Right"/>
        <DockPanel LastChildFill="True" Margin="4,40,4,92" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="#FF0C1D2C">
            <RichTextBox x:Name="Output" DockPanel.Dock="Top" Margin="4,4,4,4" Background="{x:Null}" BorderThickness="0" FontFamily="Arial" IsReadOnly="True" VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch" ScrollViewer.CanContentScroll="True" BorderBrush="{x:Null}" Foreground="#FFE6E6E6" FontSize="14" VerticalScrollBarVisibility="Visible">

                <RichTextBox.Resources>
                    <Style TargetType="{x:Type Paragraph}">
                        <Setter Property="Margin" Value="0"/>
                    </Style>
                    <Style TargetType="{x:Type ScrollBar}">
                        <Setter Property="Template" Value="{DynamicResource ScrollBarControlTemplate1}"/>
                    </Style>

                </RichTextBox.Resources>
            </RichTextBox>
        </DockPanel>
        <DockPanel Margin="4,4,4,4" LastChildFill="True" Canvas.Left="8" Canvas.Top="256" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Background="#FF0C1D2C" Height="84">
            <TextBox x:Name="Input" DockPanel.Dock="Top" Margin="4,4,4,4" Background="{x:Null}" BorderThickness="0" FontFamily="Arial" FontSize="14" BorderBrush="{x:Null}" Foreground="#FFE6E6E6" CaretBrush="#FFE6E6E6"/>
        </DockPanel>
    </Grid>
</Window>
